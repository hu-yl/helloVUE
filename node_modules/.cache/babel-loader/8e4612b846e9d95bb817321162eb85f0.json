{"remainingRequest":"/Users/huyaolong/Desktop/helloVUE/helloVUE/node_modules/babel-loader/lib/index.js!/Users/huyaolong/Desktop/helloVUE/helloVUE/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/huyaolong/Desktop/helloVUE/helloVUE/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/huyaolong/Desktop/helloVUE/helloVUE/src/components/pages/Login.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/huyaolong/Desktop/helloVUE/helloVUE/src/components/pages/Login.vue","mtime":1553098775938},{"path":"/Users/huyaolong/Desktop/helloVUE/helloVUE/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/huyaolong/Desktop/helloVUE/helloVUE/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/huyaolong/Desktop/helloVUE/helloVUE/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/huyaolong/Desktop/helloVUE/helloVUE/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import _Promise from \"/Users/huyaolong/Desktop/helloVUE/helloVUE/node_modules/@babel/runtime-corejs2/core-js/promise\";\nimport \"vant/es/toast/style\";\nimport _Toast from \"vant/es/toast\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport axios from \"axios\";\nimport url from \"@/serviceAPI.config.js\";\nexport default {\n  data: function data() {\n    return {\n      username: \"\",\n      password: \"\",\n      openLoading: false,\n      //是否开启用户注册的Loading状态\n      usernameErrorMsg: \"\",\n      //当用户名出现错误时的提示信息\n      passwordErrorMsg: \"\" //当密码出现错误时的提示信息\n\n    };\n  },\n  created: function created() {\n    if (localStorage.userInfo) {\n      _Toast.success('您已经登录过了');\n\n      this.$router.push('/');\n    }\n  },\n  methods: {\n    goBack: function goBack() {\n      this.$router.go(-1);\n    },\n    loginAction: function loginAction() {\n      this.checkForm() && this.axiosLoginUser(); //如果第一个不为true，第二个不执行\n    },\n    axiosLoginUser: function axiosLoginUser() {\n      var _this = this;\n\n      this.openLoading = true;\n      axios({\n        url: url.login,\n        method: \"post\",\n        data: {\n          userName: this.username,\n          password: this.password\n        }\n      }).then(function (response) {\n        console.log(response);\n\n        if (response.data.code == 200 && response.data.message) {\n          new _Promise(function (resolve, reject) {\n            localStorage.userInfo = {\n              userName: _this.username\n            };\n            setTimeout(function () {\n              resolve();\n            }, 500);\n          }).then(function () {\n            _Toast.success(\"登录成功\");\n\n            _this.$router.push(\"/\");\n          }).catch(function (err) {\n            _Toast.fail(\"登录状态保存失败\");\n\n            console.log(err);\n          });\n        } else {\n          _Toast.fail(\"登录失败\");\n\n          _this.openLoading = false;\n        }\n      }).catch(function (error) {\n        _Toast.fail(\"登录失败\");\n\n        _this.openLoading = false;\n      });\n    },\n    //****表单验证方法\n    checkForm: function checkForm() {\n      var isOk = true;\n\n      if (this.username.length < 5) {\n        this.usernameErrorMsg = \"用户名不能少于5位\";\n        isOk = false;\n      } else {\n        this.usernameErrorMsg = \"\";\n      }\n\n      if (this.password.length < 6) {\n        this.passwordErrorMsg = \"密码不能少于6位\";\n        isOk = false;\n      } else {\n        this.passwordErrorMsg = \"\";\n      }\n\n      return isOk;\n    }\n  }\n};",{"version":3,"sources":["Login.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA8BA,OAAA,KAAA,MAAA,OAAA;AACA,OAAA,GAAA,MAAA,wBAAA;AAEA,eAAA;AACA,EAAA,IADA,kBACA;AACA,WAAA;AACA,MAAA,QAAA,EAAA,EADA;AAEA,MAAA,QAAA,EAAA,EAFA;AAGA,MAAA,WAAA,EAAA,KAHA;AAGA;AACA,MAAA,gBAAA,EAAA,EAJA;AAIA;AACA,MAAA,gBAAA,EAAA,EALA,CAKA;;AALA,KAAA;AAOA,GATA;AAUA,EAAA,OAVA,qBAUA;AACA,QAAA,YAAA,CAAA,QAAA,EAAA;AACA,aAAA,OAAA,CAAA,SAAA;;AACA,WAAA,OAAA,CAAA,IAAA,CAAA,GAAA;AACA;AACA,GAfA;AAgBA,EAAA,OAAA,EAAA;AACA,IAAA,MADA,oBACA;AACA,WAAA,OAAA,CAAA,EAAA,CAAA,CAAA,CAAA;AACA,KAHA;AAIA,IAAA,WAJA,yBAIA;AACA,WAAA,SAAA,MAAA,KAAA,cAAA,EAAA,CADA,CAEA;AACA,KAPA;AASA,IAAA,cATA,4BASA;AAAA;;AACA,WAAA,WAAA,GAAA,IAAA;AACA,MAAA,KAAA,CAAA;AACA,QAAA,GAAA,EAAA,GAAA,CAAA,KADA;AAEA,QAAA,MAAA,EAAA,MAFA;AAGA,QAAA,IAAA,EAAA;AACA,UAAA,QAAA,EAAA,KAAA,QADA;AAEA,UAAA,QAAA,EAAA,KAAA;AAFA;AAHA,OAAA,CAAA,CAQA,IARA,CAQA,UAAA,QAAA,EAAA;AACA,QAAA,OAAA,CAAA,GAAA,CAAA,QAAA;;AACA,YAAA,QAAA,CAAA,IAAA,CAAA,IAAA,IAAA,GAAA,IAAA,QAAA,CAAA,IAAA,CAAA,OAAA,EAAA;AACA,uBAAA,UAAA,OAAA,EAAA,MAAA,EAAA;AACA,YAAA,YAAA,CAAA,QAAA,GAAA;AAAA,cAAA,QAAA,EAAA,KAAA,CAAA;AAAA,aAAA;AACA,YAAA,UAAA,CAAA,YAAA;AACA,cAAA,OAAA;AACA,aAFA,EAEA,GAFA,CAAA;AAGA,WALA,EAMA,IANA,CAMA,YAAA;AACA,mBAAA,OAAA,CAAA,MAAA;;AACA,YAAA,KAAA,CAAA,OAAA,CAAA,IAAA,CAAA,GAAA;AACA,WATA,EAUA,KAVA,CAUA,UAAA,GAAA,EAAA;AACA,mBAAA,IAAA,CAAA,UAAA;;AACA,YAAA,OAAA,CAAA,GAAA,CAAA,GAAA;AACA,WAbA;AAcA,SAfA,MAeA;AACA,iBAAA,IAAA,CAAA,MAAA;;AACA,UAAA,KAAA,CAAA,WAAA,GAAA,KAAA;AACA;AACA,OA7BA,EA8BA,KA9BA,CA8BA,UAAA,KAAA,EAAA;AACA,eAAA,IAAA,CAAA,MAAA;;AACA,QAAA,KAAA,CAAA,WAAA,GAAA,KAAA;AACA,OAjCA;AAkCA,KA7CA;AA8CA;AACA,IAAA,SA/CA,uBA+CA;AACA,UAAA,IAAA,GAAA,IAAA;;AACA,UAAA,KAAA,QAAA,CAAA,MAAA,GAAA,CAAA,EAAA;AACA,aAAA,gBAAA,GAAA,WAAA;AACA,QAAA,IAAA,GAAA,KAAA;AACA,OAHA,MAGA;AACA,aAAA,gBAAA,GAAA,EAAA;AACA;;AACA,UAAA,KAAA,QAAA,CAAA,MAAA,GAAA,CAAA,EAAA;AACA,aAAA,gBAAA,GAAA,UAAA;AACA,QAAA,IAAA,GAAA,KAAA;AACA,OAHA,MAGA;AACA,aAAA,gBAAA,GAAA,EAAA;AACA;;AAEA,aAAA,IAAA;AACA;AA/DA;AAhBA,CAAA","sourcesContent":["<template>\n  <div>\n    <van-nav-bar title=\"用户登陆\" left-text=\"返回\" left-arrow @click-left=\"goBack\"/>\n    <div class=\"register-panel\">\n      <van-field\n        v-model=\"username\"\n        label=\"用户名\"\n        icon=\"clear\"\n        placeholder=\"请输入用户名\"\n        required\n        @click-icon=\"username=''\"\n        :error-message=\"usernameErrorMsg\"\n      />\n\n      <van-field\n        v-model=\"password\"\n        type=\"password\"\n        label=\"密码\"\n        placeholder=\"请输入密码\"\n        required\n        :error-message=\"passwordErrorMsg\"\n      />\n      <div class=\"register-button\">\n        <van-button type=\"primary\" @click=\"loginAction\" size=\"large\" :loading=\"openLoading\">登陆</van-button>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport axios from \"axios\";\nimport url from \"@/serviceAPI.config.js\";\nimport { Toast } from \"vant\";\nexport default {\n  data() {\n    return {\n      username: \"\",\n      password: \"\",\n      openLoading: false, //是否开启用户注册的Loading状态\n      usernameErrorMsg: \"\", //当用户名出现错误时的提示信息\n      passwordErrorMsg: \"\" //当密码出现错误时的提示信息\n    };\n  },\n   created(){\n            if(localStorage.userInfo){\n                Toast.success('您已经登录过了')\n                this.$router.push('/')\n            }\n        },\n  methods: {\n    goBack() {\n      this.$router.go(-1);\n    },\n    loginAction() {\n      this.checkForm() && this.axiosLoginUser();\n      //如果第一个不为true，第二个不执行\n    },\n\n    axiosLoginUser() {\n      this.openLoading = true;\n      axios({\n        url: url.login,\n        method: \"post\",\n        data: {\n          userName: this.username,\n          password: this.password\n        }\n      })\n        .then(response => {\n          console.log(response);\n          if (response.data.code == 200 && response.data.message) {\n            new Promise((resolve, reject) => {\n              localStorage.userInfo = { userName: this.username };\n              setTimeout(() => {\n                resolve();\n              }, 500);\n            })\n              .then(() => {\n                Toast.success(\"登录成功\");\n                this.$router.push(\"/\");\n              })\n              .catch(err => {\n                Toast.fail(\"登录状态保存失败\");\n                console.log(err);\n              });\n          } else {\n            Toast.fail(\"登录失败\");\n            this.openLoading = false;\n          }\n        })\n        .catch(error => {\n          Toast.fail(\"登录失败\");\n          this.openLoading = false;\n        });\n    },\n    //****表单验证方法\n    checkForm() {\n      let isOk = true;\n      if (this.username.length < 5) {\n        this.usernameErrorMsg = \"用户名不能少于5位\";\n        isOk = false;\n      } else {\n        this.usernameErrorMsg = \"\";\n      }\n      if (this.password.length < 6) {\n        this.passwordErrorMsg = \"密码不能少于6位\";\n        isOk = false;\n      } else {\n        this.passwordErrorMsg = \"\";\n      }\n\n      return isOk;\n    }\n  }\n};\n</script>\n\n<style scoped>\n.register-panel {\n  width: 96%;\n  border-radius: 5px;\n  margin: 20px auto;\n  padding-bottom: 80px;\n}\n.register-button {\n  padding-top: 10px;\n}\n</style>"],"sourceRoot":"src/components/pages"}]}